// Code generated by mockery v1.0.0. DO NOT EDIT.

// @generated

package restful

import context "context"
import data "github.com/gy-kim/search-service/internal/data"
import mock "github.com/stretchr/testify/mock"

// MockListService is an autogenerated mock type for the ListService type
type MockListService struct {
	mock.Mock
}

// Do provides a mock function with given fields: ctx, query, filter, sort, from
func (_m *MockListService) Do(ctx context.Context, query string, filter *data.Filter, sort *data.SortCond, from int) ([]*data.Product, int64, error) {
	ret := _m.Called(ctx, query, filter, sort, from)

	var r0 []*data.Product
	if rf, ok := ret.Get(0).(func(context.Context, string, *data.Filter, *data.SortCond, int) []*data.Product); ok {
		r0 = rf(ctx, query, filter, sort, from)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*data.Product)
		}
	}

	var r1 int64
	if rf, ok := ret.Get(1).(func(context.Context, string, *data.Filter, *data.SortCond, int) int64); ok {
		r1 = rf(ctx, query, filter, sort, from)
	} else {
		r1 = ret.Get(1).(int64)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string, *data.Filter, *data.SortCond, int) error); ok {
		r2 = rf(ctx, query, filter, sort, from)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
